/*
 * The Addition is one of the easiest operations to carry out. The same holds true for matrices. Two matrices can be added only if they have the same dimensions. The elements at similar positions get added.

Given two matrices A and B having (n1 x m1) and (n2 x m2) dimensions respectively. Add A and B. 

Example 1:

Input:
n1 = 2, m1 = 3
A[][] = {{1, 2, 3},
         {4, 5, 6}}

n2 = 2, m2 = 3
B[][] = {{1, 3, 3},
         {2, 3, 3}}

Output: 2 5 6 6 8 9
Explanation:
The summation matrix of A and B is:
res[][] = {{2, 5, 6},
           {6, 8, 9}}
The output is generated by traversing each
row sequentially.
Example 2:

Input:
n1 = 3, m1 = 2
A[][] = {{1, 2},
         {3, 4}, 
         {5, 6}}

n2 = 3, m2 = 2
B[][] = {{1, 3},
          {3, 2},
         {3, 3}}
Output: 2 5 6 6 8 9
 */
package com.matrix;

/**
 *
 * @author User
 */
public class Adding_Two_Matrices {

    public static void main(String[] args) {
        int A[][] = {{1, 2, 3}, {4, 5, 6}};
        int B[][] = {{1, 3, 3}, {2, 3, 3}};
        for (int[] i : sumMatrix(A, B)) {
            for (int j = 0; j < i.length; j++) {
                System.out.print(i[j] + " ");
            }
            System.out.println();
        }
    }

    static int[][] sumMatrix(int A[][], int B[][]) {
        if (A.length != B.length) {
            return new int[][]{{-1}};
        }
        int ans[][] = new int[A.length][];
        for (int i = 0; i < A.length; i++) {
            if (A[i].length != B[i].length) {
                return new int[][]{{-1}};
            }
            ans[i] = new int[A[i].length];
            for (int j = 0; j < A[i].length; j++) {
                ans[i][j] = A[i][j] + B[i][j];
            }
        }
        return ans;
    }

}
